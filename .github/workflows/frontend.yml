name: Frontend CI

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub repository
        uses: actions/checkout@v4.2.2

      - name: Prepare environment (Node.js)
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 22.11

      - name: Cache node_modules
        uses: actions/cache@v4.2.0
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build app
        run: |
          cd frontend
          npm run build

      - name: Upload build result
        uses: actions/upload-artifact@v4.4.3
        with:
          name: frontend-build
          path: frontend/server/dist
          
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub repository
        uses: actions/checkout@v4.2.2

      - name: Prepare environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 22.11

      - name: Cache node_modules
        uses: actions/cache@v4.2.0
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run tests
        run: |
          cd frontend
          npm run test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4.4.3
        with:
          name: frontend-coverage
          path: frontend/coverage

  dockerize:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from GitHub repository
        uses: actions/checkout@v4.2.2

      - name: Prepare environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 22.11

      - name: Cache node_modules
        uses: actions/cache@v4.2.0
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Build app
        run: |
          cd frontend
          npm run build
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/rirs-frontend frontend

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/rirs-frontend

  deploy-to-ec2:
    needs: dockerize
    runs-on: ubuntu-latest

    steps:
      - name: Trigger redeploy webhook on EC2 instance
        run: curl http://${{ secrets.EC2_PUBLIC_IP }}:9000/hooks/redeploy-frontend
